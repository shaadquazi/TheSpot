name: staging-flask-build-and-deploy

env:
  AWS_ELASTIC_BEANSTALK_APPLICATION_NAME: "the-spot"
  AWS_ELASTIC_BEANSTALK_ENVIRONMENT_NAME: "the-spot-staging"
  DEPLOY_PACKAGE_NAME: "the-spot-server-${{ github.sha }}.zip"

on:
  pull_request_target:
    types:
      - closed
    branches:
      - 'staging'

jobs:
  Build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: Staging
    
    steps:
      - name: Checking out code
        uses: actions/checkout@v3
          
      - name: Create ZIP deployment package
        run : |
          cd src
          cd server
          zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Copy package to S3
        run : |
          ls
          aws s3 cp ./src/server/${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ secrets.AWS_S3_BUCKET_NAME }}/

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    environment: Staging
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
      - name: Create new Elastic Beanstalk Applicaiton Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.AWS_ELASTIC_BEANSTALK_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ secrets.AWS_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "version-${{ github.sha }}" \
          --description "commit-SHA-${{ github.sha }}"

      - name: Deploy Elastic Beanstalk Applicaiton
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.AWS_ELASTIC_BEANSTALK_ENVIRONMENT_NAME }} --version-label "version-${{ github.sha }}"
